/* DO NOT MODIFY: This file is autogenerated! */

#import "ODOTestCaseModel.h"
#import <OmniDataObjects/ODOModel-Creation.h>

#import <Foundation/NSValue.h>
#import <Foundation/NSString.h>
#import <Foundation/NSData.h>
#import <Foundation/NSDate.h>




NSString * const ODOTestCaseAllAttributeTypesEntityName = @"AllAttributeTypes";

NSString * const ODOTestCaseAllAttributeTypesBoolean = @"boolean";
NSString * const ODOTestCaseAllAttributeTypesData = @"data";
NSString * const ODOTestCaseAllAttributeTypesDate = @"date";
NSString * const ODOTestCaseAllAttributeTypesFloat32 = @"float32";
NSString * const ODOTestCaseAllAttributeTypesFloat64 = @"float64";
NSString * const ODOTestCaseAllAttributeTypesInt16 = @"int16";
NSString * const ODOTestCaseAllAttributeTypesInt32 = @"int32";
NSString * const ODOTestCaseAllAttributeTypesInt64 = @"int64";
NSString * const ODOTestCaseAllAttributeTypesPk = @"pk";
NSString * const ODOTestCaseAllAttributeTypesString = @"string";

NSString * const ODOTestCaseDetailEntityName = @"Detail";

NSString * const ODOTestCaseDetailMaster = @"master";
NSString * const ODOTestCaseDetailName = @"name";
NSString * const ODOTestCaseDetailPk = @"pk";

NSString * const ODOTestCaseDynamicPropertyEntityName = @"DynamicProperty";

NSString * const ODOTestCaseDynamicPropertyName = @"name";
NSString * const ODOTestCaseDynamicPropertyPk = @"pk";

NSString * const ODOTestCaseMasterEntityName = @"Master";

NSString * const ODOTestCaseMasterDetails = @"details";
NSString * const ODOTestCaseMasterName = @"name";
NSString * const ODOTestCaseMasterPk = @"pk";

ODOModel * ODOTestCaseModel(void)
{
    static ODOModel *model = nil;
    if (model) return model;

    ODOAttribute *AllAttributeTypes_boolean = ODOAttributeCreate(ODOTestCaseAllAttributeTypesBoolean, NO/*optional*/, NO/*transient*/, @selector(boolean), @selector(setBoolean:), ODOAttributeTypeBoolean, [NSNumber class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *AllAttributeTypes_data = ODOAttributeCreate(ODOTestCaseAllAttributeTypesData, NO/*optional*/, NO/*transient*/, @selector(data), @selector(setData:), ODOAttributeTypeData, [NSData class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *AllAttributeTypes_date = ODOAttributeCreate(ODOTestCaseAllAttributeTypesDate, NO/*optional*/, NO/*transient*/, @selector(date), @selector(setDate:), ODOAttributeTypeDate, [NSDate class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *AllAttributeTypes_float32 = ODOAttributeCreate(ODOTestCaseAllAttributeTypesFloat32, NO/*optional*/, NO/*transient*/, @selector(float32), @selector(setFloat32:), ODOAttributeTypeFloat32, [NSNumber class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *AllAttributeTypes_float64 = ODOAttributeCreate(ODOTestCaseAllAttributeTypesFloat64, NO/*optional*/, NO/*transient*/, @selector(float64), @selector(setFloat64:), ODOAttributeTypeFloat64, [NSNumber class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *AllAttributeTypes_int16 = ODOAttributeCreate(ODOTestCaseAllAttributeTypesInt16, NO/*optional*/, NO/*transient*/, @selector(int16), @selector(setInt16:), ODOAttributeTypeInt16, [NSNumber class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *AllAttributeTypes_int32 = ODOAttributeCreate(ODOTestCaseAllAttributeTypesInt32, NO/*optional*/, NO/*transient*/, @selector(int32), @selector(setInt32:), ODOAttributeTypeInt32, [NSNumber class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *AllAttributeTypes_int64 = ODOAttributeCreate(ODOTestCaseAllAttributeTypesInt64, NO/*optional*/, NO/*transient*/, @selector(int64), @selector(setInt64:), ODOAttributeTypeInt64, [NSNumber class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *AllAttributeTypes_pk = ODOAttributeCreate(ODOTestCaseAllAttributeTypesPk, NO/*optional*/, NO/*transient*/, @selector(pk), @selector(setPk:), ODOAttributeTypeString, [NSString class], nil/*default value*/, YES/*primary*/);
    ODOAttribute *AllAttributeTypes_string = ODOAttributeCreate(ODOTestCaseAllAttributeTypesString, NO/*optional*/, NO/*transient*/, @selector(string), @selector(setString:), ODOAttributeTypeString, [NSString class], nil/*default value*/, NO/*primary*/);
    ODOEntity *AllAttributeTypes = ODOEntityCreate(ODOTestCaseAllAttributeTypesEntityName, @"I:AllAttributeTypes", @"U:AllAttributeTypes", @"D:AllAttributeTypes", @"PK:AllAttributeTypes",
    @"ODOObject",
    [NSArray arrayWithObjects:AllAttributeTypes_boolean, AllAttributeTypes_data, AllAttributeTypes_date, AllAttributeTypes_float32, AllAttributeTypes_float64, AllAttributeTypes_int16, AllAttributeTypes_int32, AllAttributeTypes_int64, AllAttributeTypes_pk, AllAttributeTypes_string, nil]);

    ODORelationship *Detail_master = ODORelationshipCreate(ODOTestCaseDetailMaster, NO/*optional*/, NO/*transient*/, @selector(master), @selector(setMaster:), NO/*toMany*/, ODORelationshipDeleteRuleNullify);
    ODOAttribute *Detail_name = ODOAttributeCreate(ODOTestCaseDetailName, YES/*optional*/, NO/*transient*/, @selector(name), @selector(setName:), ODOAttributeTypeString, [NSString class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *Detail_pk = ODOAttributeCreate(ODOTestCaseDetailPk, NO/*optional*/, NO/*transient*/, @selector(pk), @selector(setPk:), ODOAttributeTypeString, [NSString class], nil/*default value*/, YES/*primary*/);
    ODOEntity *Detail = ODOEntityCreate(ODOTestCaseDetailEntityName, @"I:Detail", @"U:Detail", @"D:Detail", @"PK:Detail",
    @"ODOObject",
    [NSArray arrayWithObjects:Detail_master, Detail_name, Detail_pk, nil]);

    ODOAttribute *DynamicProperty_name = ODOAttributeCreate(ODOTestCaseDynamicPropertyName, YES/*optional*/, NO/*transient*/, @selector(name), @selector(setName:), ODOAttributeTypeString, [NSString class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *DynamicProperty_pk = ODOAttributeCreate(ODOTestCaseDynamicPropertyPk, NO/*optional*/, NO/*transient*/, @selector(pk), @selector(setPk:), ODOAttributeTypeString, [NSString class], nil/*default value*/, YES/*primary*/);
    ODOEntity *DynamicProperty = ODOEntityCreate(ODOTestCaseDynamicPropertyEntityName, @"I:DynamicProperty", @"U:DynamicProperty", @"D:DynamicProperty", @"PK:DynamicProperty",
    @"ODOTestCaseDynamicProperty",
    [NSArray arrayWithObjects:DynamicProperty_name, DynamicProperty_pk, nil]);

    ODORelationship *Master_details = ODORelationshipCreate(ODOTestCaseMasterDetails, NO/*optional*/, NO/*transient*/, @selector(details), @selector(setDetails:), YES/*toMany*/, ODORelationshipDeleteRuleCascade);
    ODOAttribute *Master_name = ODOAttributeCreate(ODOTestCaseMasterName, YES/*optional*/, NO/*transient*/, @selector(name), @selector(setName:), ODOAttributeTypeString, [NSString class], nil/*default value*/, NO/*primary*/);
    ODOAttribute *Master_pk = ODOAttributeCreate(ODOTestCaseMasterPk, NO/*optional*/, NO/*transient*/, @selector(pk), @selector(setPk:), ODOAttributeTypeString, [NSString class], nil/*default value*/, YES/*primary*/);
    ODOEntity *Master = ODOEntityCreate(ODOTestCaseMasterEntityName, @"I:Master", @"U:Master", @"D:Master", @"PK:Master",
    @"ODOObject",
    [NSArray arrayWithObjects:Master_details, Master_name, Master_pk, nil]);

    model = ODOModelCreate(@"ODOTestCase", [NSArray arrayWithObjects:AllAttributeTypes, Detail, DynamicProperty, Master, nil]);
    ODOPropertyBind(AllAttributeTypes_boolean, AllAttributeTypes);
    ODOPropertyBind(AllAttributeTypes_data, AllAttributeTypes);
    ODOPropertyBind(AllAttributeTypes_date, AllAttributeTypes);
    ODOPropertyBind(AllAttributeTypes_float32, AllAttributeTypes);
    ODOPropertyBind(AllAttributeTypes_float64, AllAttributeTypes);
    ODOPropertyBind(AllAttributeTypes_int16, AllAttributeTypes);
    ODOPropertyBind(AllAttributeTypes_int32, AllAttributeTypes);
    ODOPropertyBind(AllAttributeTypes_int64, AllAttributeTypes);
    ODOPropertyBind(AllAttributeTypes_pk, AllAttributeTypes);
    ODOPropertyBind(AllAttributeTypes_string, AllAttributeTypes);
    ODOEntityBind(AllAttributeTypes, model);

    ODORelationshipBind(Detail_master, Detail, Master, Master_details);
    ODOPropertyBind(Detail_name, Detail);
    ODOPropertyBind(Detail_pk, Detail);
    ODOEntityBind(Detail, model);

    ODOPropertyBind(DynamicProperty_name, DynamicProperty);
    ODOPropertyBind(DynamicProperty_pk, DynamicProperty);
    ODOEntityBind(DynamicProperty, model);

    ODORelationshipBind(Master_details, Master, Detail, Detail_master);
    ODOPropertyBind(Master_name, Master);
    ODOPropertyBind(Master_pk, Master);
    ODOEntityBind(Master, model);

    ODOModelFinalize(model);
    return model;
}
